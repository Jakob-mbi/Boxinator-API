// <auto-generated />
using Boxinator_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Boxinator_API.Migrations
{
    [DbContext(typeof(BoxinatorDbContext))]
    [Migration("20230329090848_SeedDataV2")]
    partial class SeedDataV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Boxinator_API.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Multiplier = 0,
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = 2,
                            Multiplier = 0,
                            Name = "Norway"
                        },
                        new
                        {
                            Id = 3,
                            Multiplier = 0,
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = 4,
                            Multiplier = 0,
                            Name = "Finland"
                        },
                        new
                        {
                            Id = 5,
                            Multiplier = 3,
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = 6,
                            Multiplier = 3,
                            Name = "Latvia"
                        },
                        new
                        {
                            Id = 7,
                            Multiplier = 3,
                            Name = "Lithuania"
                        },
                        new
                        {
                            Id = 8,
                            Multiplier = 5,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 9,
                            Multiplier = 5,
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 10,
                            Multiplier = 6,
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = 11,
                            Multiplier = 6,
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = 12,
                            Multiplier = 6,
                            Name = "Luxembourg"
                        },
                        new
                        {
                            Id = 13,
                            Multiplier = 8,
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 14,
                            Multiplier = 8,
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = 15,
                            Multiplier = 7,
                            Name = "France"
                        },
                        new
                        {
                            Id = 16,
                            Multiplier = 9,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 17,
                            Multiplier = 10,
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 18,
                            Multiplier = 6,
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = 19,
                            Multiplier = 7,
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 20,
                            Multiplier = 7,
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = 21,
                            Multiplier = 9,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 22,
                            Multiplier = 12,
                            Name = "Iceland"
                        });
                });

            modelBuilder.Entity("Boxinator_API.Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoxColor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReciverName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserSub")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationID");

                    b.HasIndex("UserSub");

                    b.ToTable("Shipments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoxColor = "#eb4034",
                            DestinationID = 1,
                            Price = 200m,
                            ReciverName = "John Smith",
                            UserSub = "44feb5ab-e680-4979-95f6-9cbc18d32077",
                            Weight = 5
                        },
                        new
                        {
                            Id = 2,
                            BoxColor = "#15ad07",
                            DestinationID = 14,
                            Price = 212m,
                            ReciverName = "Alice Johnson",
                            UserSub = "44feb5ab-e680-4979-95f6-9cbc18d32077",
                            Weight = 1
                        },
                        new
                        {
                            Id = 3,
                            BoxColor = "#0c1fed",
                            DestinationID = 10,
                            Price = 208m,
                            ReciverName = "Bob Thompson",
                            UserSub = "44feb5ab-e680-4979-95f6-9cbc18d32077",
                            Weight = 1
                        },
                        new
                        {
                            Id = 4,
                            BoxColor = "#fcef2d",
                            DestinationID = 3,
                            Price = 200m,
                            ReciverName = "John Smith",
                            UserSub = "44feb5ab-e680-4979-95f6-9cbc18d32077",
                            Weight = 2
                        },
                        new
                        {
                            Id = 5,
                            BoxColor = "#8e2dfc",
                            DestinationID = 19,
                            Price = 208m,
                            ReciverName = "Emily Davis",
                            UserSub = "9e305eb4-7639-422d-9432-a3e001c6c5b7",
                            Weight = 1
                        },
                        new
                        {
                            Id = 6,
                            BoxColor = "#fa05b9",
                            DestinationID = 17,
                            Price = 235m,
                            ReciverName = "Bob Thompson",
                            UserSub = "c7643ce3-acaa-470e-8f11-a634dccad52a",
                            Weight = 5
                        },
                        new
                        {
                            Id = 7,
                            BoxColor = "#f76714",
                            DestinationID = 8,
                            Price = 216m,
                            ReciverName = "Emily Davis",
                            UserSub = "9e305eb4-7639-422d-9432-a3e001c6c5b7",
                            Weight = 2
                        },
                        new
                        {
                            Id = 8,
                            BoxColor = "#1ccfd9",
                            DestinationID = 22,
                            Price = 298m,
                            ReciverName = "Bob Davis",
                            UserSub = "c7643ce3-acaa-470e-8f11-a634dccad52a",
                            Weight = 8
                        });
                });

            modelBuilder.Entity("Boxinator_API.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CREATED"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RECEIVED"
                        },
                        new
                        {
                            Id = 3,
                            Name = "INTRANSIT"
                        },
                        new
                        {
                            Id = 4,
                            Name = "COMPLETED"
                        },
                        new
                        {
                            Id = 5,
                            Name = "CANCELLED"
                        });
                });

            modelBuilder.Entity("Boxinator_API.Models.User", b =>
                {
                    b.Property<string>("Sub")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Sub");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Sub = "44feb5ab-e680-4979-95f6-9cbc18d32077"
                        },
                        new
                        {
                            Sub = "c7643ce3-acaa-470e-8f11-a634dccad52a"
                        },
                        new
                        {
                            Sub = "e7359cd5-6dec-4f8b-be74-0e3148eaa51f"
                        },
                        new
                        {
                            Sub = "bcc36e9d-c309-4248-b777-0421c370eaba"
                        },
                        new
                        {
                            Sub = "9e305eb4-7639-422d-9432-a3e001c6c5b7"
                        });
                });

            modelBuilder.Entity("ShipmentStatus", b =>
                {
                    b.Property<int>("StatusListId")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentsListId")
                        .HasColumnType("int");

                    b.HasKey("StatusListId", "ShipmentsListId");

                    b.HasIndex("ShipmentsListId");

                    b.ToTable("ShipmentStatus");

                    b.HasData(
                        new
                        {
                            StatusListId = 1,
                            ShipmentsListId = 1
                        },
                        new
                        {
                            StatusListId = 3,
                            ShipmentsListId = 1
                        },
                        new
                        {
                            StatusListId = 1,
                            ShipmentsListId = 2
                        },
                        new
                        {
                            StatusListId = 1,
                            ShipmentsListId = 3
                        },
                        new
                        {
                            StatusListId = 1,
                            ShipmentsListId = 4
                        },
                        new
                        {
                            StatusListId = 1,
                            ShipmentsListId = 5
                        },
                        new
                        {
                            StatusListId = 1,
                            ShipmentsListId = 6
                        },
                        new
                        {
                            StatusListId = 4,
                            ShipmentsListId = 7
                        },
                        new
                        {
                            StatusListId = 5,
                            ShipmentsListId = 8
                        });
                });

            modelBuilder.Entity("Boxinator_API.Models.Shipment", b =>
                {
                    b.HasOne("Boxinator_API.Models.Country", "Destination")
                        .WithMany("ShipmentList")
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boxinator_API.Models.User", "User")
                        .WithMany("ShipmentsList")
                        .HasForeignKey("UserSub");

                    b.Navigation("Destination");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShipmentStatus", b =>
                {
                    b.HasOne("Boxinator_API.Models.Shipment", null)
                        .WithMany()
                        .HasForeignKey("ShipmentsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boxinator_API.Models.Status", null)
                        .WithMany()
                        .HasForeignKey("StatusListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Boxinator_API.Models.Country", b =>
                {
                    b.Navigation("ShipmentList");
                });

            modelBuilder.Entity("Boxinator_API.Models.User", b =>
                {
                    b.Navigation("ShipmentsList");
                });
#pragma warning restore 612, 618
        }
    }
}
