// <auto-generated />
using Boxinator_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Boxinator_API.Migrations
{
    [DbContext(typeof(BoxinatorDbContext))]
    [Migration("20230324155340_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Boxinator_API.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Multiplier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Boxinator_API.Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoxColor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DestinationID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReciverName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserSub")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationID");

                    b.HasIndex("UserSub");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("Boxinator_API.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("Boxinator_API.Models.User", b =>
                {
                    b.Property<string>("Sub")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Sub");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShipmentStatus", b =>
                {
                    b.Property<int>("ShipmentsListId")
                        .HasColumnType("int");

                    b.Property<int>("StatusListId")
                        .HasColumnType("int");

                    b.HasKey("ShipmentsListId", "StatusListId");

                    b.HasIndex("StatusListId");

                    b.ToTable("ShipmentStatus");
                });

            modelBuilder.Entity("Boxinator_API.Models.Shipment", b =>
                {
                    b.HasOne("Boxinator_API.Models.Country", "Destination")
                        .WithMany("ShipmentList")
                        .HasForeignKey("DestinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boxinator_API.Models.User", "User")
                        .WithMany("ShipmentsList")
                        .HasForeignKey("UserSub");

                    b.Navigation("Destination");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShipmentStatus", b =>
                {
                    b.HasOne("Boxinator_API.Models.Shipment", null)
                        .WithMany()
                        .HasForeignKey("ShipmentsListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boxinator_API.Models.Status", null)
                        .WithMany()
                        .HasForeignKey("StatusListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Boxinator_API.Models.Country", b =>
                {
                    b.Navigation("ShipmentList");
                });

            modelBuilder.Entity("Boxinator_API.Models.User", b =>
                {
                    b.Navigation("ShipmentsList");
                });
#pragma warning restore 612, 618
        }
    }
}
